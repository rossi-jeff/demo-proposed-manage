datasource db {
    provider = "postgresql"
    url      = env("ACTIVITY_DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    output   = "../generated/activity-db"
}

model AwardAssignment {
    id          String   @id @default(cuid())
    recipientId String
    awardId     String
    state       Int?     @default(0)
    createdAt   DateTime
    updatedAt   DateTime

    GroupRegistration GroupRegistration @relation(fields: [recipientId], references: [id])
}

model CampShortOrder {
    id                String   @id @default(cuid())
    campTShirtOrderId String
    designLayout      String?
    designChoice      String?
    topLineText       String?
    bottomLineText    String?
    shortSizes        String?  @db.Text()
    participants      String?  @db.Text()
    createdAt         DateTime
    updatedAt         DateTime

    CampTshirtOrder CampTshirtOrder @relation(fields: [campTShirtOrderId], references: [id])
}

model CampTshirtOrder {
    id                 String           @id @default(cuid())
    ventureId          String?
    coachId            String?
    schoolId           String?
    season             String?
    organizationName   String?
    ventureName        String?
    organizationColor1 String?
    organizationColor2 String?
    coachName          String?
    coachEmail         String?
    coachPhoneNumber   String?
    deliveryDate       DateTime?        @db.Date()
    campDataSubmitted  Boolean?         @default(false)
    orderDate          DateTime?        @db.Date()
    template           String?
    topLineText        String?
    middleLineText     String?
    bottomLineText     String?
    tShirtColor        String?
    orderOptions       Int?
    shirtSizes         String?          @db.Text()
    participants       String?          @db.Text()
    tShirtQuantity     Int?
    overfillPercentage Int?
    mascotFile         String?
    createdAt          DateTime
    updatedAt          DateTime
    CampShortOrders    CampShortOrder[]

    Coach Person? @relation(fields: [coachId], references: [id])
}

model Consent {
    id             String   @id @default(cuid())
    legalFormId    String
    registrationId String
    accepted       Boolean?
    checkboxText   String?
    sha1           String?
    createdAt      DateTime
    updatedAt      DateTime

    Registration Registration @relation(fields: [registrationId], references: [id])
}

model FuelMyClubRegistration {
    id             String   @id @default(cuid())
    registrationId String?  @unique
    data           String?  @db.Text
    createdAt      DateTime
    updatedAt      DateTime

    Registration Registration? @relation(fields: [registrationId], references: [id])
}

model GroupAwardAssignment {
    id          String   @id @default(cuid())
    recipientId String
    awardId     String
    state       Int?     @default(0)
    createdAt   DateTime
    updatedAt   DateTime

    GroupRegistration GroupRegistration @relation(fields: [recipientId], references: [id])
}

model GroupRegistration {
    id                    String                 @id @default(cuid())
    registrationId        String?
    groupId               String?
    rosterId              String?
    finalizeDate          DateTime?              @db.Date
    jerseyNumber          String?
    position              String?
    state                 Int?                   @default(0)
    createdAt             DateTime
    updatedAt             DateTime
    AwardAssignments      AwardAssignment[]
    GroupAwardAssignments GroupAwardAssignment[]
    Registration          Registration?          @relation(fields: [registrationId], references: [id])
    RecordAssignments     RecordAssignment[]
}

model InvoiceTransaction {
    id              String    @id @default(cuid())
    remoteId        String?
    status          String?
    invoiceId       String?   @unique
    paymentType     String?
    adminFlag       Boolean?  @default(true)
    problemStatusAt DateTime?
    details         String?   @db.Text
    createdAt       DateTime
    updatedAt       DateTime
}

model LineItem {
    id             String   @id @default(cuid())
    registrationId String?
    ventureId      String?
    activityName   String?
    ventureName    String?
    price          Int?
    invoiceId      String?
    refunded       Boolean? @default(false)
    paid           Boolean? @default(false)
    refundAmount   Int?     @default(0)
    ticketKind     String?
    eventName      String?
    ticketId       String?
    state          Int?     @default(0)
    createdAt      DateTime
    updatedAt      DateTime

    Registration        Registration?        @relation(fields: [registrationId], references: [id])
    Ticket              Ticket?              @relation(fields: [ticketId], references: [id])
    LineItemInvoices    LineItemInvoice[]
    SubLineItem         SubLineItem[]
    TicketRegistrations TicketRegistration[]
}

model LineItemInvoice {
    id         String   @id @default(cuid())
    lineItemId String
    invoiceId  String
    createdAt  DateTime
    updatedAt  DateTime

    LineItem LineItem @relation(fields: [lineItemId], references: [id])
}

model Message {
    id                  String   @id @default(cuid())
    schoolId            String?
    activityId          String?
    ventureId           String?
    status              String?
    message             String?  @db.Text
    groupId             String?
    senderId            String?
    eventId             String?
    messageType         Int?     @default(0)
    superadminMessage   Boolean? @default(false)
    documentFileName    String?
    documentContentType String?
    documentFileSize    Int?
    createdAt           DateTime
    updatedAt           DateTime
    Sender              Person?  @relation(fields: [senderId], references: [id])
}

model Occurance {
    id        String    @id @default(cuid())
    from      DateTime?
    to        DateTime?
    ventureId Int?
    createdAt DateTime
    updatedAt DateTime
}

model Person {
    id                       String    @id @default(cuid())
    userName                 String
    passWord                 String
    schoolId                 String?
    allowedToLogin           Boolean?  @default(false)
    firstName                String?
    lastName                 String?
    sex                      String?
    birthDate                DateTime? @db.Date
    highSchoolGraduationYear String?
    insuranceCompany         String?
    insuranceAccountNumber   String?
    physicianName            String?
    physicianPhone           String?
    studentId                String?
    schoolTransferredFrom    String?
    medicalInformation       String?   @db.Text
    acceptsCOPPA             Boolean?
    optsInToCommunications   Boolean?  @default(true)
    physicalDate             DateTime? @db.Date
    credit                   Int?
    ethnicity                String?
    firstEnrollmentDate      DateTime? @db.Date
    participationStatus      String?
    gpa                      Float?
    felonyInfo               Int?      @default(0)
    notifications            Int?      @default(31)
    concussionTestDate       DateTime? @db.Date
    adData                   String?   @db.Text
    createdAt                DateTime
    updatedAt                DateTime

    SubjectRelationships  Relationship[]       @relation("subject")
    ReceiverRelationships Relationship[]       @relation("receiver")
    CampTshirtOrders      CampTshirtOrder[]
    Messages              Message[]
    Participants          Registration[]       @relation("participant")
    RegisteredBy          Registration[]       @relation("registered_by")
    TicketRegistrations   TicketRegistration[]
}

model Record {
    id                String             @id @default(cuid())
    groupId           String?
    sportCode         String?
    title             String?
    recordCode        String?
    unit              String?
    kind              String?
    createdAt         DateTime
    updatedAt         DateTime
    RecordAssignments RecordAssignment[]
}

model RecordAssignment {
    id            String    @id @default(cuid())
    recipientId   String?
    rosterId      String?
    recordId      String?
    recordSetDate DateTime? @db.Date
    result        Float?
    state         Int?      @default(0)
    banner_year   String?
    createdAt     DateTime
    updatedAt     DateTime

    Recipient GroupRegistration? @relation(fields: [recipientId], references: [id])
    Roster    Roster?            @relation(fields: [rosterId], references: [id])
    Record    Record?            @relation(fields: [recordId], references: [id])
}

model Registration {
    id                     String                  @id @default(cuid())
    activityId             String?
    participantId          String?
    registeredById         String?
    paid                   Boolean?                @default(false)
    season                 String?
    groupId                String?
    tShirtSize             String?
    weight                 Int?
    height                 Int?
    comment                String?                 @db.Text
    tryout                 Boolean?                @default(false)
    state                  Int?                    @default(0)
    paymentOptionsComment  String?                 @db.Text
    participationStatus    String?
    paymentCodeId          String?
    shortSize              String?
    equipmentJerseySize    String?
    equipmentPantSize      String?
    equipmentJacketSize    String?
    equipmentShoeSize      String?
    createdAt              DateTime
    updatedAt              DateTime
    Consents               Consent[]
    FuelMyClubRegistration FuelMyClubRegistration?
    GroupRegistrations     GroupRegistration[]
    LineItems              LineItem[]
    Participant            Person?                 @relation(fields: [participantId], references: [id], name: "participant")
    RegisteredBy           Person?                 @relation(fields: [registeredById], references: [id], name: "registered_by")
    TicketRegistrations    TicketRegistration[]
}

model Relationship {
    id               String   @id @default(cuid())
    subjectId        String?
    receiverId       String?
    relationshipType String?
    createdAt        DateTime
    updatedAt        DateTime

    Subject  Person? @relation(fields: [subjectId], references: [id], name: "subject")
    Receiver Person? @relation(fields: [receiverId], references: [id], name: "receiver")
}

model Roster {
    id               String             @id @default(cuid())
    groupId          String?
    season           String?
    final            Boolean?           @default(false)
    createdAt        DateTime
    updatedAt        DateTime
    RecordAssignment RecordAssignment[]
}

model SubLineItem {
    id         String    @id @default(cuid())
    lineItemId String?
    type       String?
    amount     Int?
    settledAt  DateTime?
    remoteId   Int?
    createdAt  DateTime
    updatedAt  DateTime

    LineItem LineItem? @relation(fields: [lineItemId], references: [id])
}

model Ticket {
    id                  String               @id @default(cuid())
    eventId             String?
    kind                String?
    basePrice           Int?
    maxNumberOfTickets  Int?
    state               Int?                 @default(0)
    title               String?              @db.VarChar(40)
    groupSize           Int?                 @default(1)
    commentsEnabled     Boolean?             @default(false)
    createdAt           DateTime
    updatedAt           DateTime
    LineItem            LineItem[]
    TicketRegistrations TicketRegistration[]
}

model TicketRegistration {
    id                    String   @id @default(cuid())
    registrationId        String?
    ticketId              String?
    state                 Int?     @default(0)
    ticketholderFirstName String?
    ticketEmail           String?
    studentId             String?
    lineItemId            String?
    confirmationNumber    String?
    ticketholderLastName  String?
    comment               String?  @db.Text
    createdAt             DateTime
    updatedAt             DateTime

    Ticket       Ticket?       @relation(fields: [ticketId], references: [id])
    Registration Registration? @relation(fields: [registrationId], references: [id])
    Student      Person?       @relation(fields: [studentId], references: [id])
    LineItem     LineItem?     @relation(fields: [lineItemId], references: [id])
}

model VentureRegistration {
    id             String   @id @default(cuid())
    registrationId String?
    ventureId      String?
    state          Int?     @default(0)
    comment        String?
    paymentCodeId  String?
    createdAt      DateTime
    updatedAt      DateTime
}
